services:
  frontend:
    build:
      context: ./know-your-fan-front
    container_name: frontend
    ports:
      - "5173:5173"
    volumes:
      - ./know-your-fan-front:/app
      - /app/node_modules
    environment:
      - HOST=0.0.0.0
    command: npm run dev
    networks:
      - kafka-host
  postgres:
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=knowyourfan
    ports:
      - "5432:5432"
    volumes:
      - ./know-your-fan-backend/api/adapters/database/init/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - kafka-host

  app:
    build:
      context: ./know-your-fan-backend/api
    container_name: gateway
    volumes:
      - ./know-your-fan-backend/api:/go/src/
    ports:
      - "3031:3031"
    networks:
      - kafka-host
    depends_on:
      - postgres
  
  validation-service:
    build:
      context: ./know-your-fan-backend/document-validator
    container_name: validation-service
    networks:
      - kafka-host
    depends_on:
      - kafka

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka-host

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT

    networks:
      - kafka-host

  control-center:
    image: confluentinc/cp-enterprise-control-center:6.0.1
    hostname: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_CONNECT_CLUSTER: http://app-connect:8083
      PORT: 9021
    networks:
      - kafka-host

  kafka-init:
    image: confluentinc/cp-kafka:7.6.0
    depends_on:
      - kafka
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "sleep 10 &&
       kafka-topics --create --topic document-validation --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server kafka:9092 &&
       kafka-topics --create --topic document-validation-result --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server kafka:9092"
    networks:
      - kafka-host

networks:
  kafka-host:
